# 1. Напишите функцию, которая будет принимать номер кредитной карты и
# показывать только последние 4 цифры. Остальные цифры должны заменяться
# звездочками

def card():
    a = 0
    new_n = str()
    for i in str(n):
        if a != 12:
            new_n += '*'
            a += 1
        else:
            new_n += i
    print(new_n)
n = int(input('Введите номер вашей карты: '))
card()



# 2. Напишите функцию, которая проверяет: является ли слово палиндромом

def  polyndrom(s):
    b = s[::-1]
    if s == b:
        return 'Слово палиндромное'
    else:
        return 'Слово непалиндромное'

s = input('Введите слово: ')
print(polyndrom(s))



# 3. Решите задачу
# Класс Tomato:
# 1. Создайте класс Tomato
# 2. Создайте статическое свойство states, которое будет содержать все стадии
# созревания помидора
# 3. Создайте метод __init__(), внутри которого будут определены два динамических
# protected свойства: 1) _index - передается параметром и 2) _state - принимает первое
# значение из словаря states
# 4. Создайте метод grow(), который будет переводить томат на следующую стадию
# созревания
# 5. Создайте метод is_ripe(), который будет проверять, что томат созрел (достиг
# последней стадии созревания)

class Tomato:

    states1 = 'Незрелый'
    states2 = 'Недозрелый'
    states3 = 'Зрелый'

    def __init__(self, index, state=states1):
        self._index = index
        self._state = state

    def grow(self):
        if self._state == states1:
            print('Томат еще недозрел :(')
            self._state = states2
            if self._state == states2:
                print('Томат почти созрел :)')
                self._state = states3

    def is_ripe(self):
        if self._state == states3:
            print('Томат созрел! :)')
        else:
            print('Томат незрелый!')

# Класс TomatoBush
# 1. Создайте класс TomatoBush
# 2. Определите метод __init__(), который будет принимать в качестве параметра
# количество томатов и на его основе будет создавать список объектов класса
# Tomato. Данный список будет храниться внутри динамического свойства tomatoes.
# 3. Создайте метод grow_all(), который будет переводить все объекты из списка
# томатов на следующий этап созревания
# 4. Создайте метод all_are_ripe(), который будет возвращать True, если все томаты из
# списка стали спелыми
# 5. Создайте метод give_away_all(), который будет чистить список томатов после
# сбора урожая

class TomatoBush:
    def __init__(self, numbers, tomatoes):
        self.numbers = numbers


